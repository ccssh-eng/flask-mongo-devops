<<<<<<< HEAD
# .github/workflows/devops-pipeline.yaml
name: CI/CD DevSecOps Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test-scan-deploy:
 8   runs-on: ubuntu-latest

    env:
      IMAGE_NAME: flask-app
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: âœ¨ Checkout code
        uses: actions/checkout@v3

      - name: ðŸ“„ Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: ðŸ’¡ Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: ðŸ”§ Lint (flake8)
        run: flake8 app.py

      - name: ðŸ“ƒ Run tests (pytest)
        run: pytest tests/

      - name: ðŸ“† Build Docker image
        run: |
          docker build -t $IMAGE_NAME:$IMAGE_TAG .

      - name: ðŸ”Ž Trivy image scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
8          severity: 'CRITICAL,HIGH'

      - name: ðŸšš Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: ðŸ“¦ Push Docker image
        run: |
          docker tag $IMAGE_NAME:$IMAGE_TAG ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG
          docker push ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG

      - name: ðŸ“Š Set up Kubeconfig
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: âœ¨ Deploy to K8s (Minikube or remote)
        run: |
          kubectl apply -f k8s/
          kubectl rollout restart deployment flask

      - name: âœ… Done
        run: echo "CI/CD pipeline completed!"
=======
name: CI - Flask DevOps

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test-lint-build-scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Run flake8
      run: flake8 app.py

    - name: Run pytest
      run: pytest tests/

    - name: Build Docker image
      run: docker build -t flask-app:ci .

    - name: Install Trivy
      run: |
        sudo apt-get install wget -y
        wget https://github.com/aquasecurity/trivy/releases/latest/download/trivy_0.51.1_Linux-64bit.deb
        sudo dpkg -i trivy_0.51.1_Linux-64bit.deb

    - name: Scan Docker image with Trivy
      run: |
        trivy image --exit-code 1 --severity CRITICAL,HIGH flask-app:ci
>>>>>>> e54131fa806770adc355d10ca493ee78cd1ad4b6
